{
  "directed": true,
  "label": "CDG of MergeSort.java",
  "type": "Control Dependence Graph (CDG)",
  "file": "MergeSort.java",

  "nodes": [
    {
      "id": 0,
      "line": 3,
      "label": "double[] merge(double[] a, double[] b)"
    },
    {
      "id": 1,
      "line": 4,
      "label": "double[] c = new double[a.length + b.length]"
    },
    {
      "id": 2,
      "line": 5,
      "label": "int i = 0, j = 0"
    },
    {
      "id": 3,
      "line": 6,
      "label": "int k = 0"
    },
    {
      "id": 4,
      "line": 6,
      "label": "for (k < c.length)"
    },
    {
      "id": 5,
      "line": 0,
      "label": "LOOP"
    },
    {
      "id": 6,
      "line": 7,
      "label": "if (i >= a.length)"
    },
    {
      "id": 7,
      "line": 0,
      "label": "THEN"
    },
    {
      "id": 8,
      "line": 7,
      "label": "c[k] = b[j++]"
    },
    {
      "id": 9,
      "line": 0,
      "label": "ELSE"
    },
    {
      "id": 10,
      "line": 8,
      "label": "if (j >= b.length)"
    },
    {
      "id": 11,
      "line": 0,
      "label": "THEN"
    },
    {
      "id": 12,
      "line": 8,
      "label": "c[k] = a[i++]"
    },
    {
      "id": 13,
      "line": 0,
      "label": "ELSE"
    },
    {
      "id": 14,
      "line": 9,
      "label": "if (a[i] <= b[j])"
    },
    {
      "id": 15,
      "line": 0,
      "label": "THEN"
    },
    {
      "id": 16,
      "line": 9,
      "label": "c[k] = a[i++]"
    },
    {
      "id": 17,
      "line": 0,
      "label": "ELSE"
    },
    {
      "id": 18,
      "line": 10,
      "label": "c[k] = b[j++]"
    },
    {
      "id": 19,
      "line": 6,
      "label": "k++"
    },
    {
      "id": 20,
      "line": 12,
      "label": "return c;"
    },
    {
      "id": 21,
      "line": 0,
      "label": "exit"
    },
    {
      "id": 22,
      "line": 15,
      "label": "double[] mergesort(double[] input)"
    },
    {
      "id": 23,
      "line": 16,
      "label": "int N = input.length"
    },
    {
      "id": 24,
      "line": 17,
      "label": "if (N <= 1)"
    },
    {
      "id": 25,
      "line": 0,
      "label": "THEN"
    },
    {
      "id": 26,
      "line": 17,
      "label": "return input;"
    },
    {
      "id": 27,
      "line": 0,
      "label": "ELSE"
    },
    {
      "id": 28,
      "line": 0,
      "label": "FOLLOW-1"
    },
    {
      "id": 29,
      "line": 18,
      "label": "double[] a = new double[N/2]"
    },
    {
      "id": 30,
      "line": 19,
      "label": "double[] b = new double[N - N/2]"
    },
    {
      "id": 31,
      "line": 20,
      "label": "int i = 0"
    },
    {
      "id": 32,
      "line": 20,
      "label": "for (i < a.length)"
    },
    {
      "id": 33,
      "line": 0,
      "label": "LOOP"
    },
    {
      "id": 34,
      "line": 21,
      "label": "a[i] = input[i]"
    },
    {
      "id": 35,
      "line": 20,
      "label": "i++"
    },
    {
      "id": 36,
      "line": 22,
      "label": "int i = 0"
    },
    {
      "id": 37,
      "line": 22,
      "label": "for (i < b.length)"
    },
    {
      "id": 38,
      "line": 0,
      "label": "LOOP"
    },
    {
      "id": 39,
      "line": 23,
      "label": "b[i] = input[i + N/2]"
    },
    {
      "id": 40,
      "line": 22,
      "label": "i++"
    },
    {
      "id": 41,
      "line": 24,
      "label": "return merge(mergesort(a), mergesort(b));"
    },
    {
      "id": 42,
      "line": 0,
      "label": "exit"
    },
    {
      "id": 43,
      "line": 27,
      "label": "boolean isSorted(double[] a)"
    },
    {
      "id": 44,
      "line": 28,
      "label": "int i = 1"
    },
    {
      "id": 45,
      "line": 28,
      "label": "for (i < a.length)"
    },
    {
      "id": 46,
      "line": 0,
      "label": "LOOP"
    },
    {
      "id": 47,
      "line": 29,
      "label": "if (a[i] < a[i-1])"
    },
    {
      "id": 48,
      "line": 0,
      "label": "THEN"
    },
    {
      "id": 49,
      "line": 29,
      "label": "return false;"
    },
    {
      "id": 50,
      "line": 0,
      "label": "ELSE"
    },
    {
      "id": 51,
      "line": 28,
      "label": "i++"
    },
    {
      "id": 52,
      "line": 0,
      "label": "FOLLOW-1"
    },
    {
      "id": 53,
      "line": 30,
      "label": "return true;"
    },
    {
      "id": 54,
      "line": 0,
      "label": "exit"
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "label": ""
    },
    {
      "id": 1,
      "source": 0,
      "target": 2,
      "label": ""
    },
    {
      "id": 2,
      "source": 0,
      "target": 3,
      "label": ""
    },
    {
      "id": 3,
      "source": 0,
      "target": 4,
      "label": ""
    },
    {
      "id": 4,
      "source": 4,
      "target": 5,
      "label": "True"
    },
    {
      "id": 5,
      "source": 5,
      "target": 6,
      "label": ""
    },
    {
      "id": 6,
      "source": 6,
      "target": 7,
      "label": "True"
    },
    {
      "id": 7,
      "source": 7,
      "target": 8,
      "label": ""
    },
    {
      "id": 8,
      "source": 6,
      "target": 9,
      "label": "False"
    },
    {
      "id": 9,
      "source": 9,
      "target": 10,
      "label": ""
    },
    {
      "id": 10,
      "source": 10,
      "target": 11,
      "label": "True"
    },
    {
      "id": 11,
      "source": 11,
      "target": 12,
      "label": ""
    },
    {
      "id": 12,
      "source": 10,
      "target": 13,
      "label": "False"
    },
    {
      "id": 13,
      "source": 13,
      "target": 14,
      "label": ""
    },
    {
      "id": 14,
      "source": 14,
      "target": 15,
      "label": "True"
    },
    {
      "id": 15,
      "source": 15,
      "target": 16,
      "label": ""
    },
    {
      "id": 16,
      "source": 14,
      "target": 17,
      "label": "False"
    },
    {
      "id": 17,
      "source": 17,
      "target": 18,
      "label": ""
    },
    {
      "id": 18,
      "source": 5,
      "target": 19,
      "label": ""
    },
    {
      "id": 19,
      "source": 0,
      "target": 20,
      "label": ""
    },
    {
      "id": 20,
      "source": 0,
      "target": 21,
      "label": ""
    },
    {
      "id": 21,
      "source": 22,
      "target": 23,
      "label": ""
    },
    {
      "id": 22,
      "source": 22,
      "target": 24,
      "label": ""
    },
    {
      "id": 23,
      "source": 24,
      "target": 25,
      "label": "True"
    },
    {
      "id": 24,
      "source": 25,
      "target": 26,
      "label": ""
    },
    {
      "id": 25,
      "source": 24,
      "target": 27,
      "label": "False"
    },
    {
      "id": 26,
      "source": 27,
      "target": 28,
      "label": ""
    },
    {
      "id": 27,
      "source": 28,
      "target": 29,
      "label": ""
    },
    {
      "id": 28,
      "source": 28,
      "target": 30,
      "label": ""
    },
    {
      "id": 29,
      "source": 28,
      "target": 31,
      "label": ""
    },
    {
      "id": 30,
      "source": 28,
      "target": 32,
      "label": ""
    },
    {
      "id": 31,
      "source": 32,
      "target": 33,
      "label": "True"
    },
    {
      "id": 32,
      "source": 33,
      "target": 34,
      "label": ""
    },
    {
      "id": 33,
      "source": 33,
      "target": 35,
      "label": ""
    },
    {
      "id": 34,
      "source": 28,
      "target": 36,
      "label": ""
    },
    {
      "id": 35,
      "source": 28,
      "target": 37,
      "label": ""
    },
    {
      "id": 36,
      "source": 37,
      "target": 38,
      "label": "True"
    },
    {
      "id": 37,
      "source": 38,
      "target": 39,
      "label": ""
    },
    {
      "id": 38,
      "source": 38,
      "target": 40,
      "label": ""
    },
    {
      "id": 39,
      "source": 28,
      "target": 41,
      "label": ""
    },
    {
      "id": 40,
      "source": 22,
      "target": 42,
      "label": ""
    },
    {
      "id": 41,
      "source": 43,
      "target": 44,
      "label": ""
    },
    {
      "id": 42,
      "source": 43,
      "target": 45,
      "label": ""
    },
    {
      "id": 43,
      "source": 45,
      "target": 46,
      "label": "True"
    },
    {
      "id": 44,
      "source": 46,
      "target": 47,
      "label": ""
    },
    {
      "id": 45,
      "source": 47,
      "target": 48,
      "label": "True"
    },
    {
      "id": 46,
      "source": 48,
      "target": 49,
      "label": ""
    },
    {
      "id": 47,
      "source": 47,
      "target": 50,
      "label": "False"
    },
    {
      "id": 48,
      "source": 46,
      "target": 51,
      "label": ""
    },
    {
      "id": 49,
      "source": 50,
      "target": 52,
      "label": ""
    },
    {
      "id": 50,
      "source": 52,
      "target": 53,
      "label": ""
    },
    {
      "id": 51,
      "source": 43,
      "target": 54,
      "label": ""
    }
  ]
}
