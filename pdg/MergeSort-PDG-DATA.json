{
  "directed": true,
  "multigraph": true,
  "label": "DDG of MergeSort.java",
  "type": "Data Dependence Graph (DDG)",
  "file": "MergeSort.java",

  "nodes": [
    {
      "id": 0,
      "line": 3,
      "label": "double[] merge(double[] a, double[] b)",
      "defs": ["a", "b"],
      "uses": []
    },
    {
      "id": 1,
      "line": 4,
      "label": "double[] c = new double[a.length + b.length]",
      "defs": ["c"],
      "uses": []
    },
    {
      "id": 2,
      "line": 5,
      "label": "int i = 0, j = 0",
      "defs": ["i", "j"],
      "uses": []
    },
    {
      "id": 3,
      "line": 6,
      "label": "int k = 0",
      "defs": ["k"],
      "uses": []
    },
    {
      "id": 4,
      "line": 6,
      "label": "for (k < c.length)",
      "defs": [],
      "uses": ["k"]
    },
    {
      "id": 5,
      "line": 6,
      "label": "k++",
      "defs": ["k"],
      "uses": ["k"]
    },
    {
      "id": 6,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 7,
      "line": 7,
      "label": "if (i >= a.length)",
      "defs": [],
      "uses": ["i"]
    },
    {
      "id": 8,
      "line": 7,
      "label": "c[k] = b[j++]",
      "defs": ["j"],
      "uses": ["b", "c", "j", "k"]
    },
    {
      "id": 9,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 10,
      "line": 8,
      "label": "if (j >= b.length)",
      "defs": [],
      "uses": ["j"]
    },
    {
      "id": 11,
      "line": 8,
      "label": "c[k] = a[i++]",
      "defs": ["i"],
      "uses": ["a", "c", "i", "k"]
    },
    {
      "id": 12,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 13,
      "line": 9,
      "label": "if (a[i] <= b[j])",
      "defs": [],
      "uses": ["a", "b", "i", "j"]
    },
    {
      "id": 14,
      "line": 9,
      "label": "c[k] = a[i++]",
      "defs": ["i"],
      "uses": ["a", "c", "i", "k"]
    },
    {
      "id": 15,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 16,
      "line": 10,
      "label": "c[k] = b[j++]",
      "defs": ["j"],
      "uses": ["b", "c", "j", "k"]
    },
    {
      "id": 17,
      "line": 12,
      "label": "return c;",
      "defs": [],
      "uses": ["c"]
    },
    {
      "id": 18,
      "line": 15,
      "label": "double[] mergesort(double[] input)",
      "defs": ["input"],
      "uses": []
    },
    {
      "id": 19,
      "line": 16,
      "label": "int N = input.length",
      "defs": ["N"],
      "uses": []
    },
    {
      "id": 20,
      "line": 17,
      "label": "if (N <= 1)",
      "defs": [],
      "uses": ["N"]
    },
    {
      "id": 21,
      "line": 17,
      "label": "return input;",
      "defs": [],
      "uses": ["input"]
    },
    {
      "id": 22,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 23,
      "line": 18,
      "label": "double[] a = new double[N/2]",
      "defs": ["a"],
      "uses": ["N"]
    },
    {
      "id": 24,
      "line": 19,
      "label": "double[] b = new double[N - N/2]",
      "defs": ["b"],
      "uses": ["N"]
    },
    {
      "id": 25,
      "line": 20,
      "label": "int i = 0",
      "defs": ["i"],
      "uses": []
    },
    {
      "id": 26,
      "line": 20,
      "label": "for (i < a.length)",
      "defs": [],
      "uses": ["i"]
    },
    {
      "id": 27,
      "line": 20,
      "label": "i++",
      "defs": ["i"],
      "uses": ["i"]
    },
    {
      "id": 28,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 29,
      "line": 21,
      "label": "a[i] = input[i]",
      "defs": [],
      "uses": ["a", "input", "i"]
    },
    {
      "id": 30,
      "line": 22,
      "label": "int i = 0",
      "defs": ["i"],
      "uses": []
    },
    {
      "id": 31,
      "line": 22,
      "label": "for (i < b.length)",
      "defs": [],
      "uses": ["i"]
    },
    {
      "id": 32,
      "line": 22,
      "label": "i++",
      "defs": ["i"],
      "uses": ["i"]
    },
    {
      "id": 33,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 34,
      "line": 23,
      "label": "b[i] = input[i + N/2]",
      "defs": [],
      "uses": ["input", "b", "i", "N"]
    },
    {
      "id": 35,
      "line": 24,
      "label": "return merge(mergesort(a), mergesort(b));",
      "defs": [],
      "uses": ["a", "b"]
    },
    {
      "id": 36,
      "line": 27,
      "label": "boolean isSorted(double[] a)",
      "defs": ["a"],
      "uses": []
    },
    {
      "id": 37,
      "line": 28,
      "label": "int i = 1",
      "defs": ["i"],
      "uses": []
    },
    {
      "id": 38,
      "line": 28,
      "label": "for (i < a.length)",
      "defs": [],
      "uses": ["i"]
    },
    {
      "id": 39,
      "line": 28,
      "label": "i++",
      "defs": ["i"],
      "uses": ["i"]
    },
    {
      "id": 40,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 41,
      "line": 29,
      "label": "if (a[i] < a[i-1])",
      "defs": [],
      "uses": ["a", "i"]
    },
    {
      "id": 42,
      "line": 29,
      "label": "return false;",
      "defs": [],
      "uses": []
    },
    {
      "id": 43,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 44,
      "line": 30,
      "label": "return true;",
      "defs": [],
      "uses": []
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "type": "Control",
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "type": "Control",
      "label": ""
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "type": "Control",
      "label": ""
    },
    {
      "id": 3,
      "source": 3,
      "target": 4,
      "type": "Control",
      "label": ""
    },
    {
      "id": 4,
      "source": 4,
      "target": 6,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 5,
      "source": 4,
      "target": 7,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 6,
      "source": 7,
      "target": 8,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 7,
      "source": 8,
      "target": 9,
      "type": "Control",
      "label": ""
    },
    {
      "id": 8,
      "source": 7,
      "target": 10,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 9,
      "source": 10,
      "target": 11,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 10,
      "source": 11,
      "target": 12,
      "type": "Control",
      "label": ""
    },
    {
      "id": 11,
      "source": 10,
      "target": 13,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 12,
      "source": 13,
      "target": 14,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 13,
      "source": 14,
      "target": 15,
      "type": "Control",
      "label": ""
    },
    {
      "id": 14,
      "source": 13,
      "target": 16,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 15,
      "source": 16,
      "target": 15,
      "type": "Control",
      "label": ""
    },
    {
      "id": 16,
      "source": 15,
      "target": 12,
      "type": "Control",
      "label": ""
    },
    {
      "id": 17,
      "source": 12,
      "target": 9,
      "type": "Control",
      "label": ""
    },
    {
      "id": 18,
      "source": 9,
      "target": 5,
      "type": "Control",
      "label": ""
    },
    {
      "id": 19,
      "source": 5,
      "target": 4,
      "type": "Control",
      "label": ""
    },
    {
      "id": 20,
      "source": 6,
      "target": 17,
      "type": "Control",
      "label": ""
    },
    {
      "id": 21,
      "source": 18,
      "target": 19,
      "type": "Control",
      "label": ""
    },
    {
      "id": 22,
      "source": 19,
      "target": 20,
      "type": "Control",
      "label": ""
    },
    {
      "id": 23,
      "source": 20,
      "target": 21,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 24,
      "source": 20,
      "target": 22,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 25,
      "source": 22,
      "target": 23,
      "type": "Control",
      "label": ""
    },
    {
      "id": 26,
      "source": 23,
      "target": 24,
      "type": "Control",
      "label": ""
    },
    {
      "id": 27,
      "source": 24,
      "target": 25,
      "type": "Control",
      "label": ""
    },
    {
      "id": 28,
      "source": 25,
      "target": 26,
      "type": "Control",
      "label": ""
    },
    {
      "id": 29,
      "source": 26,
      "target": 28,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 30,
      "source": 26,
      "target": 29,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 31,
      "source": 29,
      "target": 27,
      "type": "Control",
      "label": ""
    },
    {
      "id": 32,
      "source": 27,
      "target": 26,
      "type": "Control",
      "label": ""
    },
    {
      "id": 33,
      "source": 28,
      "target": 30,
      "type": "Control",
      "label": ""
    },
    {
      "id": 34,
      "source": 30,
      "target": 31,
      "type": "Control",
      "label": ""
    },
    {
      "id": 35,
      "source": 31,
      "target": 33,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 36,
      "source": 31,
      "target": 34,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 37,
      "source": 34,
      "target": 32,
      "type": "Control",
      "label": ""
    },
    {
      "id": 38,
      "source": 32,
      "target": 31,
      "type": "Control",
      "label": ""
    },
    {
      "id": 39,
      "source": 33,
      "target": 35,
      "type": "Control",
      "label": ""
    },
    {
      "id": 40,
      "source": 36,
      "target": 37,
      "type": "Control",
      "label": ""
    },
    {
      "id": 41,
      "source": 37,
      "target": 38,
      "type": "Control",
      "label": ""
    },
    {
      "id": 42,
      "source": 38,
      "target": 40,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 43,
      "source": 38,
      "target": 41,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 44,
      "source": 41,
      "target": 42,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 45,
      "source": 41,
      "target": 43,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 46,
      "source": 43,
      "target": 39,
      "type": "Control",
      "label": ""
    },
    {
      "id": 47,
      "source": 39,
      "target": 38,
      "type": "Control",
      "label": ""
    },
    {
      "id": 48,
      "source": 40,
      "target": 44,
      "type": "Control",
      "label": ""
    },
    {
      "id": 49,
      "source": 0,
      "target": 13,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 50,
      "source": 0,
      "target": 14,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 51,
      "source": 0,
      "target": 11,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 52,
      "source": 0,
      "target": 13,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 53,
      "source": 0,
      "target": 16,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 54,
      "source": 0,
      "target": 8,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 55,
      "source": 1,
      "target": 16,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 56,
      "source": 1,
      "target": 14,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 57,
      "source": 1,
      "target": 11,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 58,
      "source": 1,
      "target": 8,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 59,
      "source": 1,
      "target": 17,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 60,
      "source": 2,
      "target": 7,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 61,
      "source": 2,
      "target": 13,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 62,
      "source": 2,
      "target": 14,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 63,
      "source": 2,
      "target": 11,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 64,
      "source": 2,
      "target": 10,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 65,
      "source": 2,
      "target": 13,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 66,
      "source": 2,
      "target": 16,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 67,
      "source": 2,
      "target": 8,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 68,
      "source": 3,
      "target": 4,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 69,
      "source": 3,
      "target": 16,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 70,
      "source": 3,
      "target": 5,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 71,
      "source": 3,
      "target": 14,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 72,
      "source": 3,
      "target": 11,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 73,
      "source": 3,
      "target": 8,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 74,
      "source": 16,
      "target": 10,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 75,
      "source": 16,
      "target": 13,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 76,
      "source": 16,
      "target": 8,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 77,
      "source": 5,
      "target": 4,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 78,
      "source": 5,
      "target": 16,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 79,
      "source": 5,
      "target": 14,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 80,
      "source": 5,
      "target": 11,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 81,
      "source": 5,
      "target": 8,
      "type": "Flows",
      "label": "k"
    },
    {
      "id": 82,
      "source": 14,
      "target": 7,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 83,
      "source": 14,
      "target": 13,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 84,
      "source": 14,
      "target": 11,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 85,
      "source": 11,
      "target": 7,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 86,
      "source": 11,
      "target": 13,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 87,
      "source": 11,
      "target": 14,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 88,
      "source": 8,
      "target": 10,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 89,
      "source": 8,
      "target": 13,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 90,
      "source": 8,
      "target": 16,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 91,
      "source": 18,
      "target": 29,
      "type": "Flows",
      "label": "input"
    },
    {
      "id": 92,
      "source": 18,
      "target": 34,
      "type": "Flows",
      "label": "input"
    },
    {
      "id": 93,
      "source": 18,
      "target": 21,
      "type": "Flows",
      "label": "input"
    },
    {
      "id": 94,
      "source": 19,
      "target": 20,
      "type": "Flows",
      "label": "N"
    },
    {
      "id": 95,
      "source": 19,
      "target": 23,
      "type": "Flows",
      "label": "N"
    },
    {
      "id": 96,
      "source": 19,
      "target": 24,
      "type": "Flows",
      "label": "N"
    },
    {
      "id": 97,
      "source": 19,
      "target": 34,
      "type": "Flows",
      "label": "N"
    },
    {
      "id": 98,
      "source": 23,
      "target": 29,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 99,
      "source": 23,
      "target": 35,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 100,
      "source": 24,
      "target": 34,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 101,
      "source": 24,
      "target": 35,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 102,
      "source": 25,
      "target": 26,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 103,
      "source": 25,
      "target": 29,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 104,
      "source": 25,
      "target": 27,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 105,
      "source": 27,
      "target": 26,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 106,
      "source": 27,
      "target": 29,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 107,
      "source": 30,
      "target": 31,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 108,
      "source": 30,
      "target": 34,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 109,
      "source": 30,
      "target": 32,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 110,
      "source": 32,
      "target": 31,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 111,
      "source": 32,
      "target": 34,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 112,
      "source": 36,
      "target": 41,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 113,
      "source": 37,
      "target": 38,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 114,
      "source": 37,
      "target": 41,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 115,
      "source": 37,
      "target": 39,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 116,
      "source": 39,
      "target": 38,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 117,
      "source": 39,
      "target": 41,
      "type": "Flows",
      "label": "i"
    }
  ]
}
