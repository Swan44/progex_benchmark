[ {
  "mutant_id" : "MUT_027",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (array[i] <= max) {",
  "equivalence" : false,
  "operator" : "ROD"
}, {
  "mutant_id" : "MUT_033",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (array[i] >= min) {",
  "equivalence" : false,
  "operator" : "ROD"
}, {
  "mutant_id" : "MUT_042",
  "difference" : "@@ -2022 +2022 @@\n-        for (int i = startIndex; i >= 0; i--) {\n+        for (int i = startIndex; i >= -1; i--) {",
  "equivalence" : false,
  "operator" : "AOIU"
}, {
  "mutant_id" : "MUT_056",
  "difference" : "@@ -2020 +2020 @@\n-        double min = valueToFind - tolerance;\n+        double min = valueToFind * tolerance;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_060",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (array[i] >= min && true) {",
  "equivalence" : false,
  "operator" : "ROD"
}, {
  "mutant_id" : "MUT_063",
  "difference" : "@@ -2012 +2012 @@\n-        if (ArrayUtils.isEmpty(array)) {\n+        if (false) {",
  "equivalence" : false,
  "operator" : "VDL"
}, {
  "mutant_id" : "MUT_066",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (false) {",
  "equivalence" : false,
  "operator" : "ROD"
}, {
  "mutant_id" : "MUT_078",
  "difference" : "@@ -2015 +2015 @@\n-        if (startIndex < 0) {\n+        if (startIndex < -1) {",
  "equivalence" : false,
  "operator" : "AOIU"
}, {
  "mutant_id" : "MUT_085",
  "difference" : "@@ -2020 +2020 @@\n-        double min = valueToFind - tolerance;\n+        double min = valueToFind / tolerance;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_099",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (array[i] == min && array[i] <= max) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_114",
  "difference" : "@@ -2020 +2020 @@\n-        double min = valueToFind - tolerance;\n+        double min = valueToFind % tolerance;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_124",
  "difference" : "@@ -2017 +2017 @@\n-        } else if (startIndex >= array.length) {\n+        } else if (startIndex > array.length) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_131",
  "difference" : "@@ -2022 +2022 @@\n-        for (int i = startIndex; i >= 0; i--) {\n+        for (int i = startIndex; i == 0; i--) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_149",
  "difference" : "@@ -2018 +2018 @@\n-            startIndex = array.length - 1;\n+            startIndex = array.length - -1;",
  "equivalence" : false,
  "operator" : "AOIU"
}, {
  "mutant_id" : "MUT_188",
  "difference" : "@@ -2012 +2012 @@\n-        if (ArrayUtils.isEmpty(array)) {\n+        if (true) {",
  "equivalence" : false,
  "operator" : "VDL"
}, {
  "mutant_id" : "MUT_193",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (array[i] >= min && array[i] < max) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_203",
  "difference" : "@@ -2018 +2018 @@\n-            startIndex = array.length - 1;\n+            startIndex = array.length - 0;",
  "equivalence" : false,
  "operator" : "CR"
}, {
  "mutant_id" : "MUT_224",
  "difference" : "@@ -2018 +2018 @@\n-            startIndex = array.length - 1;\n+            startIndex = array.length / 1;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_242",
  "difference" : "@@ -2017 +2017 @@\n-        } else if (startIndex >= array.length) {\n+        } else if (startIndex == array.length) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_243",
  "difference" : "@@ -2022 +2022 @@\n-        for (int i = startIndex; i >= 0; i--) {\n+        for (int i = startIndex; i >= 1; i--) {",
  "equivalence" : false,
  "operator" : "CR"
}, {
  "mutant_id" : "MUT_249",
  "difference" : "@@ -2020 +2020 @@\n-        double min = valueToFind - tolerance;\n+        double min = valueToFind + tolerance;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_250",
  "difference" : "@@ -2018 +2018 @@\n-            startIndex = array.length - 1;\n+            startIndex = array.length % 1;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_264",
  "difference" : "@@ -2021 +2021 @@\n-        double max = valueToFind + tolerance;\n+        double max = valueToFind % tolerance;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_275",
  "difference" : "@@ -2021 +2021 @@\n-        double max = valueToFind + tolerance;\n+        double max = valueToFind * tolerance;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_285",
  "difference" : "@@ -2022 +2022 @@\n-        for (int i = startIndex; i >= 0; i--) {\n+        for (int i = startIndex; true; i--) {",
  "equivalence" : false,
  "operator" : "CDL"
}, {
  "mutant_id" : "MUT_291",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (array[i] > min && array[i] <= max) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_305",
  "difference" : "@@ -2021 +2021 @@\n-        double max = valueToFind + tolerance;\n+        double max = valueToFind - tolerance;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_314",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (true && array[i] <= max) {",
  "equivalence" : false,
  "operator" : "ROD"
}, {
  "mutant_id" : "MUT_315",
  "difference" : "@@ -2015 +2015 @@\n-        if (startIndex < 0) {\n+        if (startIndex != 0) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_319",
  "difference" : "@@ -2018 +2018 @@\n-            startIndex = array.length - 1;\n+            startIndex = array.length + 1;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_332",
  "difference" : "@@ -2021 +2021 @@\n-        double max = valueToFind + tolerance;\n+        double max = valueToFind / tolerance;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_355",
  "difference" : "@@ -2015 +2015 @@\n-        if (startIndex < 0) {\n+        if (startIndex <= 0) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_363",
  "difference" : "@@ -2017 +2017 @@\n-        } else if (startIndex >= array.length) {\n+        } else if (true) {",
  "equivalence" : false,
  "operator" : "ROD"
}, {
  "mutant_id" : "MUT_367",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (array[i] >= min && array[i] == max) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_377",
  "difference" : "@@ -2018 +2018 @@\n-            startIndex = array.length - 1;\n+            startIndex = array.length * 1;",
  "equivalence" : false,
  "operator" : "AORB"
}, {
  "mutant_id" : "MUT_434",
  "difference" : "@@ -2015 +2015 @@\n-        if (startIndex < 0) {\n+        if (false) {",
  "equivalence" : false,
  "operator" : "CDL"
}, {
  "mutant_id" : "MUT_449",
  "difference" : "@@ -2022 +2022 @@\n-        for (int i = startIndex; i >= 0; i--) {\n+        for (int i = startIndex; i > 0; i--) {",
  "equivalence" : false,
  "operator" : "ROR"
}, {
  "mutant_id" : "MUT_479",
  "difference" : "@@ -2023 +2023 @@\n-            if (array[i] >= min && array[i] <= max) {\n+            if (array[i] >= min == array[i] <= max) {",
  "equivalence" : false,
  "operator" : "null"
}, {
  "mutant_id" : "MUT_484",
  "difference" : "@@ -2015 +2015 @@\n-        if (startIndex < 0) {\n+        if (startIndex < 1) {",
  "equivalence" : false,
  "operator" : "CR"
} ]