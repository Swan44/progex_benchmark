[
    {
        "difference": "@@ -1471 +1471 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = 0; false; i++) {",
        "equivalence": false,
        "operator": "ROD"
    },
    {
        "difference": "@@ -1416 +1416 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = -1; i < nodesList.size(); i++) {",
        "equivalence": false,
        "operator": "AOIU"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs * (2 * slot);",
        "equivalence": true,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs + 2 / slot;",
        "equivalence": true,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1448 +1448 @@\n-\t\t\t\tnAifsd = sifs + aifs3 * slot;\n+\t\t\t\tnAifsd = sifs / (aifs3 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1455 +1455 @@\n-\t\t\t\tnAifsd = sifs + aifs0 * slot;\n+\t\t\t\tnAifsd = sifs + aifs0 + slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1416 +1416 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = 0; false; i++) {",
        "equivalence": false,
        "operator": "ROD"
    },
    {
        "difference": "@@ -1448 +1448 @@\n-\t\t\t\tnAifsd = sifs + aifs3 * slot;\n+\t\t\t\tnAifsd = sifs + aifs3 - slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1470 +1470 @@\n-\t\tint position = -1;\n+\t\tint position = 0;",
        "equivalence": false,
        "operator": "AODU"
    },
    {
        "difference": "@@ -1441 +1441 @@\n-\t\t\t\tnAifsd = sifs + aifs2 * slot;\n+\t\t\t\tnAifsd = sifs % (aifs2 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1464 +1464 @@\n-\t\t\tnmbrOfNodes++;\n+\t\t\t;",
        "equivalence": false,
        "operator": "ADL"
    },
    {
        "difference": "@@ -1448 +1448 @@\n-\t\t\t\tnAifsd = sifs + aifs3 * slot;\n+\t\t\t\tnAifsd = sifs + aifs3 % slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1441 +1441 @@\n-\t\t\t\tnAifsd = sifs + aifs2 * slot;\n+\t\t\t\tnAifsd = sifs + aifs2 - slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1441 +1441 @@\n-\t\t\t\tnAifsd = sifs + aifs2 * slot;\n+\t\t\t\tnAifsd = sifs - aifs2 * slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1455 +1455 @@\n-\t\t\t\tnAifsd = sifs + aifs0 * slot;\n+\t\t\t\tnAifsd = sifs + aifs0 - slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1416 +1416 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = 0; i <= nodesList.size(); i++) {",
        "equivalence": false,
        "operator": "ROR"
    },
    {
        "difference": "@@ -1477 +1477 @@\n-\t\tif (position != -1) {\n+\t\tif (position > -1) {",
        "equivalence": true,
        "operator": "ROR"
    },
    {
        "difference": "@@ -1441 +1441 @@\n-\t\t\t\tnAifsd = sifs + aifs2 * slot;\n+\t\t\t\tnAifsd = sifs + aifs2 % slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1455 +1455 @@\n-\t\t\t\tnAifsd = sifs + aifs0 * slot;\n+\t\t\t\tnAifsd = sifs / (aifs0 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1415 +1415 @@\n-\t\tboolean nodeExists = false;\n+\t\tboolean nodeExists = true;",
        "equivalence": false,
        "operator": "SEOR"
    },
    {
        "difference": "@@ -1416 +1416 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = 0; i != nodesList.size(); i++) {",
        "equivalence": false,
        "operator": "ROR"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs + 2 - slot;",
        "equivalence": true,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1471 +1471 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = 0; i <= nodesList.size(); i++) {",
        "equivalence": false,
        "operator": "ROR"
    },
    {
        "difference": "@@ -1478 +1478 @@\n-\t\t\tnodesList.removeElementAt(position);\n+\t\t\t;",
        "equivalence": false,
        "operator": "FCDL"
    },
    {
        "difference": "@@ -1455 +1455 @@\n-\t\t\t\tnAifsd = sifs + aifs0 * slot;\n+\t\t\t\tnAifsd = sifs * (aifs0 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1418 +1418 @@\n-\t\t\t\tnodeExists = true;\n+\t\t\t\tnodeExists = false;",
        "equivalence": false,
        "operator": "SEOR"
    },
    {
        "difference": "@@ -1448 +1448 @@\n-\t\t\t\tnAifsd = sifs + aifs3 * slot;\n+\t\t\t\tnAifsd = sifs - aifs3 * slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1441 +1441 @@\n-\t\t\t\tnAifsd = sifs + aifs2 * slot;\n+\t\t\t\tnAifsd = sifs / (aifs2 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1441 +1441 @@\n-\t\t\t\tnAifsd = sifs + aifs2 * slot;\n+\t\t\t\tnAifsd = sifs * (aifs2 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1422 +1422 @@\n-\t\tif (nodeExists) {\n+\t\tif (false) {",
        "equivalence": false,
        "operator": "VDL"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs + 2 % slot;",
        "equivalence": true,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs - 2 * slot;",
        "equivalence": true,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1471 +1471 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = 0; i != nodesList.size(); i++) {",
        "equivalence": true,
        "operator": "ROR"
    },
    {
        "difference": "@@ -1477 +1477 @@\n-\t\tif (position != -1) {\n+\t\tif (true) {",
        "equivalence": false,
        "operator": "AODU"
    },
    {
        "difference": "@@ -1455 +1455 @@\n-\t\t\t\tnAifsd = sifs + aifs0 * slot;\n+\t\t\t\tnAifsd = sifs % (aifs0 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1455 +1455 @@\n-\t\t\t\tnAifsd = sifs + aifs0 * slot;\n+\t\t\t\tnAifsd = sifs + aifs0 / slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1455 +1455 @@\n-\t\t\t\tnAifsd = sifs + aifs0 * slot;\n+\t\t\t\tnAifsd = sifs + aifs0 % slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs % (2 * slot);",
        "equivalence": true,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1455 +1455 @@\n-\t\t\t\tnAifsd = sifs + aifs0 * slot;\n+\t\t\t\tnAifsd = sifs - aifs0 * slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1471 +1471 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = -1; i < nodesList.size(); i++) {",
        "equivalence": false,
        "operator": "AOIU"
    },
    {
        "difference": "@@ -1434 +1434 @@\n-\t\t\t\tnAifsd = sifs + aifs1 * slot;\n+\t\t\t\tnAifsd = sifs % (aifs1 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1434 +1434 @@\n-\t\t\t\tnAifsd = sifs + aifs1 * slot;\n+\t\t\t\tnAifsd = sifs + aifs1 - slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1477 +1477 @@\n-\t\tif (position != -1) {\n+\t\tif (position != 0) {",
        "equivalence": false,
        "operator": "AODU"
    },
    {
        "difference": "@@ -1434 +1434 @@\n-\t\t\t\tnAifsd = sifs + aifs1 * slot;\n+\t\t\t\tnAifsd = sifs + aifs1 % slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1477 +1477 @@\n-\t\tif (position != -1) {\n+\t\tif (position != 1) {",
        "equivalence": false,
        "operator": "AODU"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs + 2 + slot;",
        "equivalence": true,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1448 +1448 @@\n-\t\t\t\tnAifsd = sifs + aifs3 * slot;\n+\t\t\t\tnAifsd = sifs % (aifs3 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1434 +1434 @@\n-\t\t\t\tnAifsd = sifs + aifs1 * slot;\n+\t\t\t\tnAifsd = sifs / (aifs1 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1480 +1480 @@\n-\t\t\treturn true;\n+\t\t\treturn false;",
        "equivalence": false,
        "operator": "SEOR"
    },
    {
        "difference": "@@ -1448 +1448 @@\n-\t\t\t\tnAifsd = sifs + aifs3 * slot;\n+\t\t\t\tnAifsd = sifs * (aifs3 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs + -2 * slot;",
        "equivalence": false,
        "operator": "AOIU"
    },
    {
        "difference": "@@ -1470 +1470 @@\n-\t\tint position = -1;\n+\t\tint position = 1;",
        "equivalence": false,
        "operator": "AODU"
    },
    {
        "difference": "@@ -1471 +1471 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = 1; i < nodesList.size(); i++) {",
        "equivalence": false,
        "operator": "CR"
    },
    {
        "difference": "@@ -1479 +1479 @@\n-\t\t\tnmbrOfNodes--;\n+\t\t\t;",
        "equivalence": false,
        "operator": "ADL"
    },
    {
        "difference": "@@ -1434 +1434 @@\n-\t\t\t\tnAifsd = sifs + aifs1 * slot;\n+\t\t\t\tnAifsd = sifs + aifs1 + slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1441 +1441 @@\n-\t\t\t\tnAifsd = sifs + aifs2 * slot;\n+\t\t\t\tnAifsd = sifs + aifs2 / slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1434 +1434 @@\n-\t\t\t\tnAifsd = sifs + aifs1 * slot;\n+\t\t\t\tnAifsd = sifs - aifs1 * slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1434 +1434 @@\n-\t\t\t\tnAifsd = sifs + aifs1 * slot;\n+\t\t\t\tnAifsd = sifs * (aifs1 * slot);",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1422 +1422 @@\n-\t\tif (nodeExists) {\n+\t\tif (true) {",
        "equivalence": false,
        "operator": "VDL"
    },
    {
        "difference": "@@ -1434 +1434 @@\n-\t\t\t\tnAifsd = sifs + aifs1 * slot;\n+\t\t\t\tnAifsd = sifs + aifs1 / slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1463 +1463 @@\n-\t\t\tnodesList.addElement(nd);\n+\t\t\t;",
        "equivalence": false,
        "operator": "FCDL"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs / (2 * slot);",
        "equivalence": true,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1416 +1416 @@\n-\t\tfor (int i = 0; i < nodesList.size(); i++) {\n+\t\tfor (int i = 1; i < nodesList.size(); i++) {",
        "equivalence": false,
        "operator": "CR"
    },
    {
        "difference": "@@ -1448 +1448 @@\n-\t\t\t\tnAifsd = sifs + aifs3 * slot;\n+\t\t\t\tnAifsd = sifs + aifs3 / slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1441 +1441 @@\n-\t\t\t\tnAifsd = sifs + aifs2 * slot;\n+\t\t\t\tnAifsd = sifs + aifs2 + slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1429 +1429 @@\n-\t\t\tfloat nAifsd = sifs + 2 * slot;\n+\t\t\tfloat nAifsd = sifs + 0 * slot;",
        "equivalence": true,
        "operator": "CR"
    },
    {
        "difference": "@@ -1448 +1448 @@\n-\t\t\t\tnAifsd = sifs + aifs3 * slot;\n+\t\t\t\tnAifsd = sifs + aifs3 + slot;",
        "equivalence": false,
        "operator": "AORB"
    },
    {
        "difference": "@@ -1477 +1477 @@\n-\t\tif (position != -1) {\n+\t\tif (position < -1) {",
        "equivalence": false,
        "operator": "ROR"
    }
]