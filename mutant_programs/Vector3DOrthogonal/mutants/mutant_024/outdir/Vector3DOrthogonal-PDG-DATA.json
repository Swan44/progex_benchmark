{
  "directed": true,
  "multigraph": true,
  "label": "DDG of Vector3DOrthogonal.java",
  "type": "Data Dependence Graph (DDG)",
  "file": "Vector3DOrthogonal.java",

  "nodes": [
    {
      "id": 0,
      "line": 2,
      "label": "Vector3D orthogonal()",
      "defs": [],
      "uses": []
    },
    {
      "id": 1,
      "line": 4,
      "label": "double threshold = 0.6 * getNorm()",
      "defs": ["threshold"],
      "uses": []
    },
    {
      "id": 2,
      "line": 5,
      "label": "if (threshold == 0)",
      "defs": [],
      "uses": ["threshold"]
    },
    {
      "id": 3,
      "line": 6,
      "label": "throw new ArithmeticException('null norm')",
      "defs": [],
      "uses": []
    },
    {
      "id": 4,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 5,
      "line": 9,
      "label": "if ((x >= -threshold) && (x <= threshold))",
      "defs": [],
      "uses": ["threshold"]
    },
    {
      "id": 6,
      "line": 10,
      "label": "double inverse = 1 / Math.sqrt(y * y + z * z)",
      "defs": ["inverse"],
      "uses": []
    },
    {
      "id": 7,
      "line": 11,
      "label": "return new Vector3D(0, inverse * z, -inverse * y);",
      "defs": [],
      "uses": ["inverse"]
    },
    {
      "id": 8,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 9,
      "line": 12,
      "label": "if ((y >= -threshold) && (y <= threshold))",
      "defs": [],
      "uses": ["threshold"]
    },
    {
      "id": 10,
      "line": 13,
      "label": "double inverse = 1 / Math.sqrt(x * x + z * z)",
      "defs": ["inverse"],
      "uses": []
    },
    {
      "id": 11,
      "line": 14,
      "label": "return new Vector3D(-inverse * z, -1, inverse * x);",
      "defs": [],
      "uses": ["inverse"]
    },
    {
      "id": 12,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 13,
      "line": 16,
      "label": "double inverse = 1 / Math.sqrt(x * x + y * y)",
      "defs": ["inverse"],
      "uses": []
    },
    {
      "id": 14,
      "line": 17,
      "label": "return new Vector3D(inverse * y, -inverse * x, 0);",
      "defs": [],
      "uses": ["inverse"]
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "type": "Control",
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "type": "Control",
      "label": ""
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 3,
      "source": 2,
      "target": 4,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 4,
      "source": 4,
      "target": 5,
      "type": "Control",
      "label": ""
    },
    {
      "id": 5,
      "source": 5,
      "target": 6,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 6,
      "source": 6,
      "target": 7,
      "type": "Control",
      "label": ""
    },
    {
      "id": 7,
      "source": 5,
      "target": 9,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 8,
      "source": 9,
      "target": 10,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 9,
      "source": 10,
      "target": 11,
      "type": "Control",
      "label": ""
    },
    {
      "id": 10,
      "source": 9,
      "target": 12,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 11,
      "source": 12,
      "target": 8,
      "type": "Control",
      "label": ""
    },
    {
      "id": 12,
      "source": 8,
      "target": 13,
      "type": "Control",
      "label": ""
    },
    {
      "id": 13,
      "source": 13,
      "target": 14,
      "type": "Control",
      "label": ""
    },
    {
      "id": 14,
      "source": 1,
      "target": 2,
      "type": "Flows",
      "label": "threshold"
    },
    {
      "id": 15,
      "source": 1,
      "target": 5,
      "type": "Flows",
      "label": "threshold"
    },
    {
      "id": 16,
      "source": 1,
      "target": 9,
      "type": "Flows",
      "label": "threshold"
    },
    {
      "id": 17,
      "source": 13,
      "target": 14,
      "type": "Flows",
      "label": "inverse"
    },
    {
      "id": 18,
      "source": 10,
      "target": 11,
      "type": "Flows",
      "label": "inverse"
    },
    {
      "id": 19,
      "source": 6,
      "target": 7,
      "type": "Flows",
      "label": "inverse"
    }
  ]
}
