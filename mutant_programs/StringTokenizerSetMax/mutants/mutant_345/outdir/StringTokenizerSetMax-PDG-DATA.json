{
  "directed": true,
  "multigraph": true,
  "label": "DDG of StringTokenizerSetMax.java",
  "type": "Data Dependence Graph (DDG)",
  "file": "StringTokenizerSetMax.java",

  "nodes": [
    {
      "id": 0,
      "line": 2,
      "label": "void setMaxDelimCodePoint()",
      "defs": [],
      "uses": []
    },
    {
      "id": 1,
      "line": 4,
      "label": "if (delimiters == null)",
      "defs": [],
      "uses": []
    },
    {
      "id": 2,
      "line": 5,
      "label": "maxDelimCodePoint = 0",
      "defs": [],
      "uses": []
    },
    {
      "id": 3,
      "line": 6,
      "label": "return;",
      "defs": [],
      "uses": []
    },
    {
      "id": 4,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 5,
      "line": 8,
      "label": "int m = 0",
      "defs": ["m"],
      "uses": []
    },
    {
      "id": 6,
      "line": 9,
      "label": "int c",
      "defs": [],
      "uses": []
    },
    {
      "id": 7,
      "line": 10,
      "label": "int count = 0",
      "defs": ["count"],
      "uses": []
    },
    {
      "id": 8,
      "line": 11,
      "label": "int i = 0",
      "defs": ["i"],
      "uses": []
    },
    {
      "id": 9,
      "line": 11,
      "label": "for (i < delimiters.length())",
      "defs": [],
      "uses": ["i"]
    },
    {
      "id": 10,
      "line": 11,
      "label": "i += Character.charCount( c )",
      "defs": ["i"],
      "uses": ["c", "i"]
    },
    {
      "id": 11,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 12,
      "line": 12,
      "label": "c = delimiters.charAt( i )",
      "defs": ["c"],
      "uses": ["i"]
    },
    {
      "id": 13,
      "line": 13,
      "label": "if (m < c)",
      "defs": [],
      "uses": ["c", "m"]
    },
    {
      "id": 14,
      "line": 14,
      "label": "m = c",
      "defs": ["m"],
      "uses": ["c"]
    },
    {
      "id": 15,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 16,
      "line": 16,
      "label": "count++",
      "defs": ["count"],
      "uses": ["count"]
    },
    {
      "id": 17,
      "line": 18,
      "label": "maxDelimCodePoint = m",
      "defs": [],
      "uses": ["m"]
    },
    {
      "id": 18,
      "line": 19,
      "label": "if (hasSurrogates)",
      "defs": [],
      "uses": []
    },
    {
      "id": 19,
      "line": 20,
      "label": "delimiterCodePoints = new int[count]",
      "defs": [],
      "uses": ["count"]
    },
    {
      "id": 20,
      "line": 21,
      "label": "int i = 0, j = 0",
      "defs": ["i", "j"],
      "uses": []
    },
    {
      "id": 21,
      "line": 21,
      "label": "for (i < count)",
      "defs": [],
      "uses": ["count", "i"]
    },
    {
      "id": 22,
      "line": 21,
      "label": "i++, j += Character.charCount( c )",
      "defs": ["i", "j"],
      "uses": ["c", "i", "j"]
    },
    {
      "id": 23,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 24,
      "line": 22,
      "label": "c = delimiters.codePointAt( j )",
      "defs": ["c"],
      "uses": ["j"]
    },
    {
      "id": 25,
      "line": 23,
      "label": "delimiterCodePoints[i] = c",
      "defs": [],
      "uses": ["c", "i"]
    },
    {
      "id": 26,
      "line": 0,
      "label": "endif"
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "type": "Control",
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "type": "Control",
      "label": ""
    },
    {
      "id": 3,
      "source": 1,
      "target": 4,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 4,
      "source": 4,
      "target": 5,
      "type": "Control",
      "label": ""
    },
    {
      "id": 5,
      "source": 5,
      "target": 6,
      "type": "Control",
      "label": ""
    },
    {
      "id": 6,
      "source": 6,
      "target": 7,
      "type": "Control",
      "label": ""
    },
    {
      "id": 7,
      "source": 7,
      "target": 8,
      "type": "Control",
      "label": ""
    },
    {
      "id": 8,
      "source": 8,
      "target": 9,
      "type": "Control",
      "label": ""
    },
    {
      "id": 9,
      "source": 9,
      "target": 11,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 10,
      "source": 9,
      "target": 12,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 11,
      "source": 12,
      "target": 13,
      "type": "Control",
      "label": ""
    },
    {
      "id": 12,
      "source": 13,
      "target": 14,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 13,
      "source": 14,
      "target": 15,
      "type": "Control",
      "label": ""
    },
    {
      "id": 14,
      "source": 13,
      "target": 15,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 15,
      "source": 15,
      "target": 16,
      "type": "Control",
      "label": ""
    },
    {
      "id": 16,
      "source": 16,
      "target": 10,
      "type": "Control",
      "label": ""
    },
    {
      "id": 17,
      "source": 10,
      "target": 9,
      "type": "Control",
      "label": ""
    },
    {
      "id": 18,
      "source": 11,
      "target": 17,
      "type": "Control",
      "label": ""
    },
    {
      "id": 19,
      "source": 17,
      "target": 18,
      "type": "Control",
      "label": ""
    },
    {
      "id": 20,
      "source": 18,
      "target": 19,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 21,
      "source": 19,
      "target": 20,
      "type": "Control",
      "label": ""
    },
    {
      "id": 22,
      "source": 20,
      "target": 21,
      "type": "Control",
      "label": ""
    },
    {
      "id": 23,
      "source": 21,
      "target": 23,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 24,
      "source": 21,
      "target": 24,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 25,
      "source": 24,
      "target": 25,
      "type": "Control",
      "label": ""
    },
    {
      "id": 26,
      "source": 25,
      "target": 22,
      "type": "Control",
      "label": ""
    },
    {
      "id": 27,
      "source": 22,
      "target": 21,
      "type": "Control",
      "label": ""
    },
    {
      "id": 28,
      "source": 23,
      "target": 26,
      "type": "Control",
      "label": ""
    },
    {
      "id": 29,
      "source": 18,
      "target": 26,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 30,
      "source": 5,
      "target": 13,
      "type": "Flows",
      "label": "m"
    },
    {
      "id": 31,
      "source": 5,
      "target": 17,
      "type": "Flows",
      "label": "m"
    },
    {
      "id": 32,
      "source": 7,
      "target": 16,
      "type": "Flows",
      "label": "count"
    },
    {
      "id": 33,
      "source": 7,
      "target": 19,
      "type": "Flows",
      "label": "count"
    },
    {
      "id": 34,
      "source": 7,
      "target": 21,
      "type": "Flows",
      "label": "count"
    },
    {
      "id": 35,
      "source": 8,
      "target": 9,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 36,
      "source": 8,
      "target": 12,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 37,
      "source": 8,
      "target": 10,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 38,
      "source": 12,
      "target": 13,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 39,
      "source": 12,
      "target": 10,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 40,
      "source": 12,
      "target": 14,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 41,
      "source": 16,
      "target": 19,
      "type": "Flows",
      "label": "count"
    },
    {
      "id": 42,
      "source": 16,
      "target": 21,
      "type": "Flows",
      "label": "count"
    },
    {
      "id": 43,
      "source": 10,
      "target": 9,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 44,
      "source": 10,
      "target": 12,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 45,
      "source": 14,
      "target": 13,
      "type": "Flows",
      "label": "m"
    },
    {
      "id": 46,
      "source": 14,
      "target": 17,
      "type": "Flows",
      "label": "m"
    },
    {
      "id": 47,
      "source": 20,
      "target": 21,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 48,
      "source": 20,
      "target": 25,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 49,
      "source": 20,
      "target": 22,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 50,
      "source": 20,
      "target": 24,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 51,
      "source": 20,
      "target": 22,
      "type": "Flows",
      "label": "j"
    },
    {
      "id": 52,
      "source": 24,
      "target": 25,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 53,
      "source": 24,
      "target": 22,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 54,
      "source": 22,
      "target": 21,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 55,
      "source": 22,
      "target": 25,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 56,
      "source": 22,
      "target": 24,
      "type": "Flows",
      "label": "j"
    }
  ]
}
