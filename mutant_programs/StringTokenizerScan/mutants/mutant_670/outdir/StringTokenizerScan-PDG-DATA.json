{
  "directed": true,
  "multigraph": true,
  "label": "DDG of StringTokenizerScan.java",
  "type": "Data Dependence Graph (DDG)",
  "file": "StringTokenizerScan.java",

  "nodes": [
    {
      "id": 0,
      "line": 2,
      "label": "int scanToken( int startPos )",
      "defs": ["startPos"],
      "uses": []
    },
    {
      "id": 1,
      "line": 4,
      "label": "int position = startPos",
      "defs": ["position"],
      "uses": ["startPos"]
    },
    {
      "id": 2,
      "line": 5,
      "label": "if (retDelims && startPos == position)",
      "defs": [],
      "uses": ["position", "startPos"]
    },
    {
      "id": 3,
      "line": 6,
      "label": "if (!hasSurrogates)",
      "defs": [],
      "uses": []
    },
    {
      "id": 4,
      "line": 7,
      "label": "char c = str.charAt( position )",
      "defs": ["c"],
      "uses": ["position"]
    },
    {
      "id": 5,
      "line": 8,
      "label": "if (c <= maxDelimCodePoint && delimiters.indexOf( c ) >= 0)",
      "defs": [],
      "uses": ["c"]
    },
    {
      "id": 6,
      "line": 9,
      "label": "position++",
      "defs": ["position"],
      "uses": ["position"]
    },
    {
      "id": 7,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 8,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 9,
      "line": 12,
      "label": "int c = str.codePointAt( position )",
      "defs": ["c"],
      "uses": ["position"]
    },
    {
      "id": 10,
      "line": 13,
      "label": "if (c <= maxDelimCodePoint && isDelimiter( c ))",
      "defs": [],
      "uses": ["c"]
    },
    {
      "id": 11,
      "line": 14,
      "label": "position += Character.charCount( c )",
      "defs": ["position"],
      "uses": ["c", "position"]
    },
    {
      "id": 12,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 13,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 14,
      "line": 18,
      "label": "return position;",
      "defs": [],
      "uses": ["position"]
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "type": "Control",
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "type": "Control",
      "label": ""
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 3,
      "source": 3,
      "target": 4,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 4,
      "source": 4,
      "target": 5,
      "type": "Control",
      "label": ""
    },
    {
      "id": 5,
      "source": 5,
      "target": 6,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 6,
      "source": 6,
      "target": 7,
      "type": "Control",
      "label": ""
    },
    {
      "id": 7,
      "source": 5,
      "target": 7,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 8,
      "source": 7,
      "target": 8,
      "type": "Control",
      "label": ""
    },
    {
      "id": 9,
      "source": 3,
      "target": 9,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 10,
      "source": 9,
      "target": 10,
      "type": "Control",
      "label": ""
    },
    {
      "id": 11,
      "source": 10,
      "target": 11,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 12,
      "source": 11,
      "target": 12,
      "type": "Control",
      "label": ""
    },
    {
      "id": 13,
      "source": 10,
      "target": 12,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 14,
      "source": 12,
      "target": 8,
      "type": "Control",
      "label": ""
    },
    {
      "id": 15,
      "source": 8,
      "target": 13,
      "type": "Control",
      "label": ""
    },
    {
      "id": 16,
      "source": 2,
      "target": 13,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 17,
      "source": 13,
      "target": 14,
      "type": "Control",
      "label": ""
    },
    {
      "id": 18,
      "source": 0,
      "target": 1,
      "type": "Flows",
      "label": "startPos"
    },
    {
      "id": 19,
      "source": 0,
      "target": 2,
      "type": "Flows",
      "label": "startPos"
    },
    {
      "id": 20,
      "source": 1,
      "target": 2,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 21,
      "source": 1,
      "target": 14,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 22,
      "source": 1,
      "target": 9,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 23,
      "source": 1,
      "target": 11,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 24,
      "source": 1,
      "target": 4,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 25,
      "source": 1,
      "target": 6,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 26,
      "source": 9,
      "target": 10,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 27,
      "source": 9,
      "target": 11,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 28,
      "source": 11,
      "target": 14,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 29,
      "source": 4,
      "target": 5,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 30,
      "source": 6,
      "target": 14,
      "type": "Flows",
      "label": "position"
    }
  ]
}
