{
  "directed": true,
  "multigraph": true,
  "label": "DDG of SimulatorRemoveNode.java",
  "type": "Data Dependence Graph (DDG)",
  "file": "SimulatorRemoveNode.java",

  "nodes": [
    {
      "id": 0,
      "line": 2,
      "label": "boolean removeNode(int nodeId)",
      "defs": ["nodeId"],
      "uses": []
    },
    {
      "id": 1,
      "line": 4,
      "label": "int position = 1",
      "defs": ["position"],
      "uses": []
    },
    {
      "id": 2,
      "line": 5,
      "label": "int i = 0",
      "defs": ["i"],
      "uses": []
    },
    {
      "id": 3,
      "line": 5,
      "label": "for (i < nodesList.size())",
      "defs": [],
      "uses": ["i"]
    },
    {
      "id": 4,
      "line": 5,
      "label": "i++",
      "defs": ["i"],
      "uses": ["i"]
    },
    {
      "id": 5,
      "line": 0,
      "label": "endfor"
    },
    {
      "id": 6,
      "line": 6,
      "label": "if (((pamvotis.core.MobileNode) nodesList.elementAt(i)).params.id == nodeId)",
      "defs": [],
      "uses": ["i", "nodeId"]
    },
    {
      "id": 7,
      "line": 7,
      "label": "position = i",
      "defs": ["position"],
      "uses": ["i"]
    },
    {
      "id": 8,
      "line": 8,
      "label": "break;"
    },
    {
      "id": 9,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 10,
      "line": 11,
      "label": "if (position != -1)",
      "defs": [],
      "uses": ["position"]
    },
    {
      "id": 11,
      "line": 12,
      "label": "nodesList.removeElementAt(position)",
      "defs": [],
      "uses": ["position"]
    },
    {
      "id": 12,
      "line": 13,
      "label": "nmbrOfNodes--",
      "defs": [],
      "uses": []
    },
    {
      "id": 13,
      "line": 14,
      "label": "return true;",
      "defs": [],
      "uses": []
    },
    {
      "id": 14,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 15,
      "line": 16,
      "label": "throw new pamvotis.exceptions.ElementDoesNotExistException('Node '  + nodeId + ' does not exist.')",
      "defs": [],
      "uses": ["nodeId"]
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "type": "Control",
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "type": "Control",
      "label": ""
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "type": "Control",
      "label": ""
    },
    {
      "id": 3,
      "source": 3,
      "target": 5,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 4,
      "source": 3,
      "target": 6,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 5,
      "source": 6,
      "target": 7,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 6,
      "source": 7,
      "target": 8,
      "type": "Control",
      "label": ""
    },
    {
      "id": 7,
      "source": 8,
      "target": 5,
      "type": "Control",
      "label": ""
    },
    {
      "id": 8,
      "source": 6,
      "target": 9,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 9,
      "source": 9,
      "target": 4,
      "type": "Control",
      "label": ""
    },
    {
      "id": 10,
      "source": 4,
      "target": 3,
      "type": "Control",
      "label": ""
    },
    {
      "id": 11,
      "source": 5,
      "target": 10,
      "type": "Control",
      "label": ""
    },
    {
      "id": 12,
      "source": 10,
      "target": 11,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 13,
      "source": 11,
      "target": 12,
      "type": "Control",
      "label": ""
    },
    {
      "id": 14,
      "source": 12,
      "target": 13,
      "type": "Control",
      "label": ""
    },
    {
      "id": 15,
      "source": 10,
      "target": 15,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 16,
      "source": 0,
      "target": 6,
      "type": "Flows",
      "label": "nodeId"
    },
    {
      "id": 17,
      "source": 0,
      "target": 15,
      "type": "Flows",
      "label": "nodeId"
    },
    {
      "id": 18,
      "source": 1,
      "target": 10,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 19,
      "source": 1,
      "target": 11,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 20,
      "source": 2,
      "target": 3,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 21,
      "source": 2,
      "target": 6,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 22,
      "source": 2,
      "target": 4,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 23,
      "source": 2,
      "target": 7,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 24,
      "source": 4,
      "target": 3,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 25,
      "source": 4,
      "target": 6,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 26,
      "source": 4,
      "target": 7,
      "type": "Flows",
      "label": "i"
    },
    {
      "id": 27,
      "source": 7,
      "target": 10,
      "type": "Flows",
      "label": "position"
    },
    {
      "id": 28,
      "source": 7,
      "target": 11,
      "type": "Flows",
      "label": "position"
    }
  ]
}
