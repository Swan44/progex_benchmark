{
  "directed": true,
  "label": "CDG of WordUtilsCapitalize.java",
  "type": "Control Dependence Graph (CDG)",
  "file": "WordUtilsCapitalize.java",

  "nodes": [
    {
      "id": 0,
      "line": 2,
      "label": "String capitalize( String str, char[] delimiters )"
    },
    {
      "id": 1,
      "line": 4,
      "label": "int delimLen = delimiters == null ? -1 : delimiters.length"
    },
    {
      "id": 2,
      "line": 5,
      "label": "if (str == null || str.length() <= 0 || delimLen == 0)"
    },
    {
      "id": 3,
      "line": 0,
      "label": "THEN"
    },
    {
      "id": 4,
      "line": 6,
      "label": "return str;"
    },
    {
      "id": 5,
      "line": 0,
      "label": "ELSE"
    },
    {
      "id": 6,
      "line": 0,
      "label": "FOLLOW-1"
    },
    {
      "id": 7,
      "line": 8,
      "label": "int strLen = str.length()"
    },
    {
      "id": 8,
      "line": 9,
      "label": "StringBuffer buffer = new StringBuffer(strLen)"
    },
    {
      "id": 9,
      "line": 10,
      "label": "boolean capitalizeNext = true"
    },
    {
      "id": 10,
      "line": 11,
      "label": "int i = 0"
    },
    {
      "id": 11,
      "line": 11,
      "label": "for (i < strLen)"
    },
    {
      "id": 12,
      "line": 0,
      "label": "LOOP"
    },
    {
      "id": 13,
      "line": 12,
      "label": "char ch = str.charAt(i)"
    },
    {
      "id": 14,
      "line": 13,
      "label": "if (isDelimiter(ch, delimiters))"
    },
    {
      "id": 15,
      "line": 0,
      "label": "THEN"
    },
    {
      "id": 16,
      "line": 14,
      "label": "buffer.append(ch)"
    },
    {
      "id": 17,
      "line": 15,
      "label": "capitalizeNext = true"
    },
    {
      "id": 18,
      "line": 0,
      "label": "ELSE"
    },
    {
      "id": 19,
      "line": 17,
      "label": "if (capitalizeNext)"
    },
    {
      "id": 20,
      "line": 0,
      "label": "THEN"
    },
    {
      "id": 21,
      "line": 18,
      "label": "buffer.append(Character.toTitleCase( ch ))"
    },
    {
      "id": 22,
      "line": 19,
      "label": "capitalizeNext = false"
    },
    {
      "id": 23,
      "line": 0,
      "label": "ELSE"
    },
    {
      "id": 24,
      "line": 21,
      "label": "buffer.append(ch)"
    },
    {
      "id": 25,
      "line": 11,
      "label": "i++"
    },
    {
      "id": 26,
      "line": 25,
      "label": "return buffer.toString();"
    },
    {
      "id": 27,
      "line": 0,
      "label": "exit"
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "label": ""
    },
    {
      "id": 1,
      "source": 0,
      "target": 2,
      "label": ""
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "label": "True"
    },
    {
      "id": 3,
      "source": 3,
      "target": 4,
      "label": ""
    },
    {
      "id": 4,
      "source": 2,
      "target": 5,
      "label": "False"
    },
    {
      "id": 5,
      "source": 5,
      "target": 6,
      "label": ""
    },
    {
      "id": 6,
      "source": 6,
      "target": 7,
      "label": ""
    },
    {
      "id": 7,
      "source": 6,
      "target": 8,
      "label": ""
    },
    {
      "id": 8,
      "source": 6,
      "target": 9,
      "label": ""
    },
    {
      "id": 9,
      "source": 6,
      "target": 10,
      "label": ""
    },
    {
      "id": 10,
      "source": 6,
      "target": 11,
      "label": ""
    },
    {
      "id": 11,
      "source": 11,
      "target": 12,
      "label": "True"
    },
    {
      "id": 12,
      "source": 12,
      "target": 13,
      "label": ""
    },
    {
      "id": 13,
      "source": 12,
      "target": 14,
      "label": ""
    },
    {
      "id": 14,
      "source": 14,
      "target": 15,
      "label": "True"
    },
    {
      "id": 15,
      "source": 15,
      "target": 16,
      "label": ""
    },
    {
      "id": 16,
      "source": 15,
      "target": 17,
      "label": ""
    },
    {
      "id": 17,
      "source": 14,
      "target": 18,
      "label": "False"
    },
    {
      "id": 18,
      "source": 18,
      "target": 19,
      "label": ""
    },
    {
      "id": 19,
      "source": 19,
      "target": 20,
      "label": "True"
    },
    {
      "id": 20,
      "source": 20,
      "target": 21,
      "label": ""
    },
    {
      "id": 21,
      "source": 20,
      "target": 22,
      "label": ""
    },
    {
      "id": 22,
      "source": 19,
      "target": 23,
      "label": "False"
    },
    {
      "id": 23,
      "source": 23,
      "target": 24,
      "label": ""
    },
    {
      "id": 24,
      "source": 12,
      "target": 25,
      "label": ""
    },
    {
      "id": 25,
      "source": 6,
      "target": 26,
      "label": ""
    },
    {
      "id": 26,
      "source": 0,
      "target": 27,
      "label": ""
    }
  ]
}
