{
  "directed": true,
  "multigraph": true,
  "label": "DDG of Triangle.java",
  "type": "Data Dependence Graph (DDG)",
  "file": "Triangle.java",

  "nodes": [
    {
      "id": 0,
      "line": 15,
      "label": "int classify( int a, int b, int c )",
      "defs": ["a", "b", "c"],
      "uses": []
    },
    {
      "id": 1,
      "line": 17,
      "label": "int trian",
      "defs": ["$THIS.ISOSCELES", "$THIS.EQUILATERAL", "$THIS.INVALID", "$THIS.SCALENE"],
      "uses": []
    },
    {
      "id": 2,
      "line": 18,
      "label": "trian = 0",
      "defs": ["trian"],
      "uses": []
    },
    {
      "id": 3,
      "line": 19,
      "label": "if (a == b)",
      "defs": [],
      "uses": ["a", "b"]
    },
    {
      "id": 4,
      "line": 20,
      "label": "trian = trian + 1",
      "defs": ["trian"],
      "uses": ["trian"]
    },
    {
      "id": 5,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 6,
      "line": 22,
      "label": "if (a == c)",
      "defs": [],
      "uses": ["a", "c"]
    },
    {
      "id": 7,
      "line": 23,
      "label": "trian = trian + 2",
      "defs": ["trian"],
      "uses": ["trian"]
    },
    {
      "id": 8,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 9,
      "line": 25,
      "label": "if (b == c)",
      "defs": [],
      "uses": ["b", "c"]
    },
    {
      "id": 10,
      "line": 26,
      "label": "trian = trian + 3",
      "defs": ["trian"],
      "uses": ["trian"]
    },
    {
      "id": 11,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 12,
      "line": 28,
      "label": "if (trian == 0)",
      "defs": [],
      "uses": ["trian"]
    },
    {
      "id": 13,
      "line": 29,
      "label": "if (a + b < c || a + c < b || b + c < a)",
      "defs": [],
      "uses": ["a", "b", "c"]
    },
    {
      "id": 14,
      "line": 30,
      "label": "return INVALID;",
      "defs": [],
      "uses": ["$THIS.INVALID"]
    },
    {
      "id": 15,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 16,
      "line": 32,
      "label": "return SCALENE;",
      "defs": [],
      "uses": ["$THIS.SCALENE"]
    },
    {
      "id": 17,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 18,
      "line": 35,
      "label": "if (trian > 3)",
      "defs": [],
      "uses": ["trian"]
    },
    {
      "id": 19,
      "line": 36,
      "label": "return EQUILATERAL;",
      "defs": [],
      "uses": ["$THIS.EQUILATERAL"]
    },
    {
      "id": 20,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 21,
      "line": 38,
      "label": "if (trian == 1 && a + b > c)",
      "defs": [],
      "uses": ["trian", "a", "b", "c"]
    },
    {
      "id": 22,
      "line": 39,
      "label": "return ISOSCELES;",
      "defs": [],
      "uses": ["$THIS.ISOSCELES"]
    },
    {
      "id": 23,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 24,
      "line": 41,
      "label": "if (trian == 2 && a + c > b)",
      "defs": [],
      "uses": ["trian", "a", "b", "c"]
    },
    {
      "id": 25,
      "line": 42,
      "label": "return ISOSCELES;",
      "defs": [],
      "uses": ["$THIS.ISOSCELES"]
    },
    {
      "id": 26,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 27,
      "line": 44,
      "label": "if (trian == 3 && b + c > a)",
      "defs": [],
      "uses": ["trian", "a", "b", "c"]
    },
    {
      "id": 28,
      "line": 45,
      "label": "return ISOSCELES;",
      "defs": [],
      "uses": ["$THIS.ISOSCELES"]
    },
    {
      "id": 29,
      "line": 0,
      "label": "endif"
    },
    {
      "id": 30,
      "line": 49,
      "label": "return INVALID;",
      "defs": [],
      "uses": ["$THIS.INVALID"]
    }
  ],

  "edges": [
    {
      "id": 0,
      "source": 0,
      "target": 1,
      "type": "Control",
      "label": ""
    },
    {
      "id": 1,
      "source": 1,
      "target": 2,
      "type": "Control",
      "label": ""
    },
    {
      "id": 2,
      "source": 2,
      "target": 3,
      "type": "Control",
      "label": ""
    },
    {
      "id": 3,
      "source": 3,
      "target": 4,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 4,
      "source": 4,
      "target": 5,
      "type": "Control",
      "label": ""
    },
    {
      "id": 5,
      "source": 3,
      "target": 5,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 6,
      "source": 5,
      "target": 6,
      "type": "Control",
      "label": ""
    },
    {
      "id": 7,
      "source": 6,
      "target": 7,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 8,
      "source": 7,
      "target": 8,
      "type": "Control",
      "label": ""
    },
    {
      "id": 9,
      "source": 6,
      "target": 8,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 10,
      "source": 8,
      "target": 9,
      "type": "Control",
      "label": ""
    },
    {
      "id": 11,
      "source": 9,
      "target": 10,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 12,
      "source": 10,
      "target": 11,
      "type": "Control",
      "label": ""
    },
    {
      "id": 13,
      "source": 9,
      "target": 11,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 14,
      "source": 11,
      "target": 12,
      "type": "Control",
      "label": ""
    },
    {
      "id": 15,
      "source": 12,
      "target": 13,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 16,
      "source": 13,
      "target": 14,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 17,
      "source": 13,
      "target": 16,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 18,
      "source": 15,
      "target": 17,
      "type": "Control",
      "label": ""
    },
    {
      "id": 19,
      "source": 12,
      "target": 17,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 20,
      "source": 17,
      "target": 18,
      "type": "Control",
      "label": ""
    },
    {
      "id": 21,
      "source": 18,
      "target": 19,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 22,
      "source": 18,
      "target": 20,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 23,
      "source": 20,
      "target": 21,
      "type": "Control",
      "label": ""
    },
    {
      "id": 24,
      "source": 21,
      "target": 22,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 25,
      "source": 21,
      "target": 24,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 26,
      "source": 24,
      "target": 25,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 27,
      "source": 24,
      "target": 27,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 28,
      "source": 27,
      "target": 28,
      "type": "Control",
      "label": "True"
    },
    {
      "id": 29,
      "source": 27,
      "target": 29,
      "type": "Control",
      "label": "False"
    },
    {
      "id": 30,
      "source": 29,
      "target": 26,
      "type": "Control",
      "label": ""
    },
    {
      "id": 31,
      "source": 26,
      "target": 23,
      "type": "Control",
      "label": ""
    },
    {
      "id": 32,
      "source": 23,
      "target": 30,
      "type": "Control",
      "label": ""
    },
    {
      "id": 33,
      "source": 0,
      "target": 3,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 34,
      "source": 0,
      "target": 6,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 35,
      "source": 0,
      "target": 21,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 36,
      "source": 0,
      "target": 24,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 37,
      "source": 0,
      "target": 27,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 38,
      "source": 0,
      "target": 13,
      "type": "Flows",
      "label": "a"
    },
    {
      "id": 39,
      "source": 0,
      "target": 3,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 40,
      "source": 0,
      "target": 9,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 41,
      "source": 0,
      "target": 21,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 42,
      "source": 0,
      "target": 24,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 43,
      "source": 0,
      "target": 27,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 44,
      "source": 0,
      "target": 13,
      "type": "Flows",
      "label": "b"
    },
    {
      "id": 45,
      "source": 0,
      "target": 6,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 46,
      "source": 0,
      "target": 9,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 47,
      "source": 0,
      "target": 21,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 48,
      "source": 0,
      "target": 24,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 49,
      "source": 0,
      "target": 27,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 50,
      "source": 0,
      "target": 13,
      "type": "Flows",
      "label": "c"
    },
    {
      "id": 51,
      "source": 1,
      "target": 28,
      "type": "Flows",
      "label": "$THIS.ISOSCELES"
    },
    {
      "id": 52,
      "source": 1,
      "target": 25,
      "type": "Flows",
      "label": "$THIS.ISOSCELES"
    },
    {
      "id": 53,
      "source": 1,
      "target": 22,
      "type": "Flows",
      "label": "$THIS.ISOSCELES"
    },
    {
      "id": 54,
      "source": 1,
      "target": 19,
      "type": "Flows",
      "label": "$THIS.EQUILATERAL"
    },
    {
      "id": 55,
      "source": 1,
      "target": 30,
      "type": "Flows",
      "label": "$THIS.INVALID"
    },
    {
      "id": 56,
      "source": 1,
      "target": 14,
      "type": "Flows",
      "label": "$THIS.INVALID"
    },
    {
      "id": 57,
      "source": 1,
      "target": 16,
      "type": "Flows",
      "label": "$THIS.SCALENE"
    },
    {
      "id": 58,
      "source": 2,
      "target": 12,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 59,
      "source": 2,
      "target": 18,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 60,
      "source": 2,
      "target": 21,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 61,
      "source": 2,
      "target": 24,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 62,
      "source": 2,
      "target": 27,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 63,
      "source": 2,
      "target": 10,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 64,
      "source": 2,
      "target": 7,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 65,
      "source": 2,
      "target": 4,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 66,
      "source": 10,
      "target": 12,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 67,
      "source": 10,
      "target": 18,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 68,
      "source": 10,
      "target": 21,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 69,
      "source": 10,
      "target": 24,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 70,
      "source": 10,
      "target": 27,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 71,
      "source": 7,
      "target": 12,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 72,
      "source": 7,
      "target": 18,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 73,
      "source": 7,
      "target": 21,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 74,
      "source": 7,
      "target": 24,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 75,
      "source": 7,
      "target": 27,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 76,
      "source": 7,
      "target": 10,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 77,
      "source": 4,
      "target": 12,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 78,
      "source": 4,
      "target": 18,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 79,
      "source": 4,
      "target": 21,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 80,
      "source": 4,
      "target": 24,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 81,
      "source": 4,
      "target": 27,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 82,
      "source": 4,
      "target": 10,
      "type": "Flows",
      "label": "trian"
    },
    {
      "id": 83,
      "source": 4,
      "target": 7,
      "type": "Flows",
      "label": "trian"
    }
  ]
}
